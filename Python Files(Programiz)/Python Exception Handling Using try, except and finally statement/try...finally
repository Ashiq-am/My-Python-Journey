The try statement in Python can have an optional finally clause. This clause is executed no matter what,
and is generally used to release external resources.

For example, we may be connected to a remote data center through the network or working with a file or working with a Graphical User Interface (GUI).

In all these circumstances, we must clean up the resource once used, whether it was successful or not.
These actions (closing a file, GUI or disconnecting from network) are performed in the finally clause to guarantee execution.

Here is an example of file operations to illustrate this.




try:
   f = open("test.txt",encoding = 'utf-8')
   # perform file operations
finally:
   f.close()