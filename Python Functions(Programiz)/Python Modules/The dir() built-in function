We can use the dir() function to find out names that are defined inside a module.

For example, we have defined a function add() in the module example that we had in the beginning.

>>> dir(example)
['__builtins__',
'__cached__',
'__doc__',
'__file__',
'__initializing__',
'__loader__',
'__name__',
'__package__',
'add']


Here, we can see a sorted list of names (along with add). All other names that begin with an underscore are
default Python attributes associated with the module (we did not define them ourself).

For example, the __name__ attribute contains the name of the module.

>>> import example
>>> example.__name__
'example'


All the names defined in our current namespace can be found out using the dir() function without any arguments.

>>> a = 1
>>> b = "hello"
>>> import math
>>> dir()
['__builtins__', '__doc__', '__name__', 'a', 'b', 'math', 'pyscripter']