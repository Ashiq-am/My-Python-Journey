The classmethod() method returns a class method for the given function.

The syntax of classmethod() method is:

classmethod(function)

classmethod() is considered un-Pythonic so in newer Python versions,
you can use the @classmethod decorator for classmethod definition.

The syntax is:

@classmethod
def func(cls, args...)








classmethod() Parameters
The classmethod() method takes a single parameter:

function - Function that needs to be converted into a class method



Return value from classmethod()
The classmethod() method returns a class method for the given function.




What is a class method?
A class method is a method that is bound to a class rather than its object. It doesn't require creation of a class instance,
much like staticmethod.


The difference between a static method and a class method is:

Static method knows nothing about the class and just deals with the parameters

Class method works with the class since its parameter is always the class itself.

The class method can be called both by the class and its object.

Class.classmethod()
Or even
Class().classmethod()

But no matter what, the class method is always attached to a class with first argument as the class itself cls.

def classMethod(cls, args...)